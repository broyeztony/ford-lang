contract Lists;

def doList {

	let myList = listU8(1, 1, 2, 3, 5);

    // i.e `5`
    let itemAtIndex4 = getItem(myList, 4);

    // add a uint8 at the end of the list
	append(myList, u8(58));

	// reset the first index of the list to its default value (i.e u8(0))
	reset(myList, 0);

	// returns the size of the list, i.e `6`
	len(myList);

    // remove the last item of the list
    let popped = pop(myList);

	/* Introducing implicitly expanded utility functions. The `contains` function will be expanded to
	let doesListContainElement = false;
	let needle = u8(4);
    for let i = 0 to len(myList) {
        if getItem(myList, i) == needle {
            doesListContainElement = true;
            break;
        }
    }
	*/
	let found = contains(myList, u8(2)); // false


}
